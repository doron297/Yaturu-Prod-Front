{"version":3,"sources":["webpack:///webpack/bootstrap cea4e7e2e61e07de866c","webpack:///./ng2-cloudinary.ts","webpack:///./src/cloudinary.module.ts","webpack:///external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}","webpack:///external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}","webpack:///./~/ng2-file-upload/ng2-file-upload.js","webpack:///./~/ng2-file-upload/components/file-upload/file-select.directive.js","webpack:///./~/ng2-file-upload/components/file-upload/file-uploader.class.js","webpack:///./~/ng2-file-upload/components/file-upload/file-like-object.class.js","webpack:///./~/ng2-file-upload/components/file-upload/file-item.class.js","webpack:///./~/ng2-file-upload/components/file-upload/file-type.class.js","webpack:///./~/ng2-file-upload/components/file-upload/file-drop.directive.js","webpack:///./src/cloudinary-image.component.ts","webpack:///./src/cloudinary-options.class.ts","webpack:///./src/cloudinary-transforms.class.ts","webpack:///./src/cloudinary-image.service.ts","webpack:///./src/cloudinary-uploader.service.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;ACtCA,8BAAc,CAAyB,CAAC;;;;;;;;;;;;;;;;;ACAxC,kCAAuB,CAAe,CAAC;AACvC,oCAA2B,CAAiB,CAAC;AAC7C,6CAAqD,CAAiB,CAAC;AACvE,wDAAuC,EAA8B,CAAC;AACtE,sDAAqC,EAA4B,CAAC;AAK1D,+BAAsB;AAH9B,sDAAgC,EAA4B,CAAC;AAArD,0EAAqD;AAC7D,yDAAmC,EAA+B,CAAC;AAA3D,mFAA2D;AACnE,yDAAiC,EAA+B,CAAC;AAAzD,+EAAyD;AAmBjE;KAAA;KAAkC,CAAC;KAhBnC;SAAC,eAAQ,CAAC;aACR,YAAY,EAAE;iBACZ,qDAAwB;iBACxB,mCAAiB;iBACjB,qCAAmB;cACpB;aACD,OAAO,EAAE,CAAC,qBAAY,CAAC;aACvB,OAAO,EAAE;iBACP,qDAAwB;iBACxB,mCAAiB;iBACjB,qCAAmB;cACpB;aACD,SAAS,EAAE;iBACT,iDAAsB;cACvB;UACF,CAAC;;4BAAA;KACgC,0BAAC;AAAD,EAAC;AAAtB,4BAAmB,sBAAG;;;;;;;AC3BnC,2C;;;;;;ACAA,6C;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,8BAA8B;AACxD;AACA;AACA;AACA,EAAC;AACD;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,iDAAiD;AACvF;AACA,2CAA0C,6CAA6C;AACvF;AACA;AACA,2CAA0C,6CAA6C;AACvF;AACA;AACA,2CAA0C,6CAA6C;AACvF;AACA,0CAAyC,uCAAuC;AAChF;AACA;AACA;AACA;AACA,0CAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,0BAA0B,EAAE;AACnG;AACA;AACA;AACA,oCAAmC,mCAAmC,EAAE;AACxE;AACA;AACA;AACA;AACA,oCAAmC,sBAAsB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,yBAAyB,EAAE;AAC7E;AACA;AACA;AACA,sCAAqC,4CAA4C,EAAE;AACnF,4CAA2C,kCAAkC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,WAAU,EAAE;AACZ;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,WAAU,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,EAAE;AACZ;AACA,wDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AClYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,8BAA8B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;;;;;;AChjKA;AACA;AACA;AACA;AACA,6CAA4C,QAAQ;AACptD;AACA;AACA;AACA,EAAC;AACD;;;;;;;;;;;;;;;;;AC7GA,kCAAmE,CAAe,CAAC;AACnF,sDAAkC,EAA4B,CAAC;AAC/D,yDAAqC,EAA+B,CAAC;AACrE,sDAAuC,EAA4B,CAAC;AAQpE;KASI,kCAAoB,aAAqC;SAArC,kBAAa,GAAb,aAAa,CAAwB;SARzD,aAAQ,GAAW,EAAE,CAAC;SACtB,eAAU,GAAyB,IAAI,kDAAoB,EAAE,CAAC;KAOD,CAAC;KAE9D,2CAAQ,GAAR;SACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;aAAC,MAAM,IAA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","file":"./ng2-cloudinary.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cea4e7e2e61e07de866c\n **/","export * from './src/cloudinary.module';\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./ng2-cloudinary.ts\n **/","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FileDropDirective, FileSelectDirective} from 'ng2-file-upload';\nimport {CloudinaryImageComponent} from './cloudinary-image.component';\nimport {CloudinaryImageService} from './cloudinary-image.service';\n\nexport {CloudinaryOptions} from './cloudinary-options.class';\nexport {CloudinaryTransforms} from './cloudinary-transforms.class';\nexport {CloudinaryUploader} from './cloudinary-uploader.service';\nexport {CloudinaryImageService};\n\n@NgModule({\n  declarations: [\n    CloudinaryImageComponent,\n    FileDropDirective,\n    FileSelectDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CloudinaryImageComponent,\n    FileDropDirective,\n    FileSelectDirective\n  ],\n  providers: [\n    CloudinaryImageService\n  ]\n})\nexport class Ng2CloudinaryModule {}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/cloudinary.module.ts\n **/","module.exports = require(\"@angular/core\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"@angular/common\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./components/file-upload/file-select.directive'));\n__export(require('./components/file-upload/file-drop.directive'));\n__export(require('./components/file-upload/file-uploader.class'));\nvar file_select_directive_2 = require('./components/file-upload/file-select.directive');\nvar file_drop_directive_2 = require('./components/file-upload/file-drop.directive');\nexports.FILE_UPLOAD_DIRECTIVES = [file_select_directive_2.FileSelectDirective, file_drop_directive_2.FileDropDirective];\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    directives: [\n        exports.FILE_UPLOAD_DIRECTIVES\n    ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/ng2-file-upload.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar file_uploader_class_1 = require('./file-uploader.class');\n// todo: filters\nvar FileSelectDirective = (function () {\n    function FileSelectDirective(element) {\n        this.element = element;\n    }\n    FileSelectDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileSelectDirective.prototype.getFilters = function () {\n        return void 0;\n    };\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\n        return !!this.element.nativeElement.attributes.multiple;\n    };\n    FileSelectDirective.prototype.onChange = function () {\n        // let files = this.uploader.isHTML5 ? this.element.nativeElement[0].files : this.element.nativeElement[0];\n        var files = this.element.nativeElement.files;\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        // if(!this.uploader.isHTML5) this.destroy();\n        this.uploader.addToQueue(files, options, filters);\n        if (this.isEmptyAfterSelection()) {\n        }\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', file_uploader_class_1.FileUploader)\n    ], FileSelectDirective.prototype, \"uploader\", void 0);\n    __decorate([\n        core_1.HostListener('change'), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', []), \n        __metadata('design:returntype', Object)\n    ], FileSelectDirective.prototype, \"onChange\", null);\n    FileSelectDirective = __decorate([\n        core_1.Directive({ selector: '[ng2FileSelect]' }), \n        __metadata('design:paramtypes', [core_1.ElementRef])\n    ], FileSelectDirective);\n    return FileSelectDirective;\n}());\nexports.FileSelectDirective = FileSelectDirective;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/components/file-upload/file-select.directive.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\nvar file_like_object_class_1 = require('./file-like-object.class');\nvar file_item_class_1 = require('./file-item.class');\nvar file_type_class_1 = require('./file-type.class');\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nvar FileUploader = (function () {\n    function FileUploader(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false\n        };\n        this.setOptions(options);\n    }\n    FileUploader.prototype.setOptions = function (options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = options.authToken;\n        this.autoUpload = options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        // this.options.filters.unshift({name: 'folder', fn: this._folderFilter});\n    };\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\n        var _this = this;\n        var list = [];\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n            var file = files_1[_i];\n            list.push(file);\n        }\n        var arrayOfFilters = this._getFilters(filters);\n        var count = this.queue.length;\n        var addedFileItems = [];\n        list.map(function (some) {\n            if (!options) {\n                options = _this.options;\n            }\n            var temp = new file_like_object_class_1.FileLikeObject(some);\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\n                addedFileItems.push(fileItem);\n                _this.queue.push(fileItem);\n                _this._onAfterAddingFile(fileItem);\n            }\n            else {\n                var filter = arrayOfFilters[_this._failFilterIndex];\n                _this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    };\n    FileUploader.prototype.removeFromQueue = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    };\n    FileUploader.prototype.clearQueue = function () {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    };\n    FileUploader.prototype.uploadItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    };\n    FileUploader.prototype.cancelItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var prop = this.options.isHTML5 ? '_xhr' : '_form';\n        if (item && item.isUploading) {\n            item[prop].abort();\n        }\n    };\n    FileUploader.prototype.uploadAll = function () {\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\n        if (!items.length) {\n            return;\n        }\n        items.map(function (item) { return item._prepareToUploading(); });\n        items[0].upload();\n    };\n    FileUploader.prototype.cancelAll = function () {\n        var items = this.getNotUploadedItems();\n        items.map(function (item) { return item.cancel(); });\n    };\n    FileUploader.prototype.isFile = function (value) {\n        return isFile(value);\n    };\n    FileUploader.prototype.isFileLikeObject = function (value) {\n        return value instanceof file_like_object_class_1.FileLikeObject;\n    };\n    FileUploader.prototype.getIndexOfItem = function (value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    };\n    FileUploader.prototype.getNotUploadedItems = function () {\n        return this.queue.filter(function (item) { return !item.isUploaded; });\n    };\n    FileUploader.prototype.getReadyItems = function () {\n        return this.queue\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\n            .sort(function (item1, item2) { return item1.index - item2.index; });\n    };\n    FileUploader.prototype.destroy = function () {\n        return void 0;\n        /*forEach(this._directives, (key) => {\n         forEach(this._directives[key], (object) => {\n         object.destroy();\n         });\n         });*/\n    };\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\n        return { fileItems: fileItems };\n    };\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\n        return { fileItem: fileItem, form: form };\n    };\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\n        return { item: item, filter: filter, options: options };\n    };\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\n        return { fileItem: fileItem, progress: progress };\n    };\n    FileUploader.prototype.onProgressAll = function (progress) {\n        return { progress: progress };\n    };\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteAll = function () {\n        return void 0;\n    };\n    FileUploader.prototype._mimeTypeFilter = function (item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    };\n    FileUploader.prototype._fileSizeFilter = function (item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    };\n    FileUploader.prototype._fileTypeFilter = function (item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\n    };\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        var nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    };\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\n        return function (name) {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        };\n    };\n    FileUploader.prototype._xhrTransport = function (item) {\n        var _this = this;\n        var xhr = item._xhr = new XMLHttpRequest();\n        var form = new FormData();\n        this._onBeforeUploadItem(item);\n        // todo\n        /*item.formData.map(obj => {\n         obj.map((value, key) => {\n         form.append(key, value);\n         });\n         });*/\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        this._onBuildItemForm(item, form);\n        form.append(item.alias, item._file, item.file.name);\n        xhr.upload.onprogress = function (event) {\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            _this._onProgressItem(item, progress);\n        };\n        xhr.onload = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            var method = '_on' + gist + 'Item';\n            _this[method](item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onErrorItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onCancelItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        // todo\n        /*item.headers.map((value, name) => {\n         xhr.setRequestHeader(name, value);\n         });*/\n        if (this.options.headers) {\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader('Authorization', this.authToken);\n        }\n        xhr.send(form);\n        this._render();\n    };\n    FileUploader.prototype._getTotalProgress = function (value) {\n        if (value === void 0) { value = 0; }\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        var notUploaded = this.getNotUploadedItems().length;\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        var ratio = 100 / this.queue.length;\n        var current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    };\n    FileUploader.prototype._getFilters = function (filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            var names_1 = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\n        }\n        return this.options.filters;\n    };\n    FileUploader.prototype._render = function () {\n        return void 0;\n        // todo: ?\n    };\n    // private _folderFilter(item:any):boolean {\n    //   return !!(item.size || item.type);\n    // }\n    FileUploader.prototype._queueLimitFilter = function () {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    };\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\n        var _this = this;\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every(function (filter) {\n            _this._failFilterIndex++;\n            return filter.fn.call(_this, file, options);\n        });\n    };\n    FileUploader.prototype._isSuccessCode = function (status) {\n        return (status >= 200 && status < 300) || status === 304;\n    };\n    /* tslint:disable */\n    FileUploader.prototype._transformResponse = function (response, headers) {\n        // todo: ?\n        /*var headersGetter = this._headersGetter(headers);\n         forEach($http.defaults.transformResponse, (transformFn) => {\n         response = transformFn(response, headersGetter);\n         });*/\n        return response;\n    };\n    /* tslint:enable */\n    FileUploader.prototype._parseHeaders = function (headers) {\n        var parsed = {};\n        var key;\n        var val;\n        var i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map(function (line) {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    };\n    /*private _iframeTransport(item:any) {\n     // todo: implement it later\n     }*/\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    };\n    FileUploader.prototype._onAfterAddingFile = function (item) {\n        this.onAfterAddingFile(item);\n    };\n    FileUploader.prototype._onAfterAddingAll = function (items) {\n        this.onAfterAddingAll(items);\n    };\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    };\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    };\n    FileUploader.prototype._onProgressItem = function (item, progress) {\n        var total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    };\n    /* tslint:disable */\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    };\n    /* tslint:enable */\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    };\n    return FileUploader;\n}());\nexports.FileUploader = FileUploader;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/components/file-upload/file-uploader.class.js\n ** module id = 6\n ** module chunks = 0\n **/","\"use strict\";\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nvar FileLikeObject = (function () {\n    function FileLikeObject(fileOrInput) {\n        var isInput = isElement(fileOrInput);\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        var method = '_createFrom' + postfix;\n        this[method](fakePathOrObject);\n    }\n    FileLikeObject.prototype._createFromFakePath = function (path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    };\n    FileLikeObject.prototype._createFromObject = function (object) {\n        // this.lastModifiedDate = copy(object.lastModifiedDate);\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    };\n    return FileLikeObject;\n}());\nexports.FileLikeObject = FileLikeObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/components/file-upload/file-like-object.class.js\n ** module id = 7\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar file_like_object_class_1 = require('./file-like-object.class');\nvar FileItem = (function () {\n    function FileItem(uploader, some, options) {\n        this.alias = 'file';\n        this.url = '/';\n        this.method = 'POST';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new file_like_object_class_1.FileLikeObject(some);\n        this._file = some;\n        this.url = uploader.options.url;\n        this._zone = new core_1.NgZone({ enableLongStackTrace: false });\n    }\n    FileItem.prototype.upload = function () {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, []);\n            this.uploader._onErrorItem(this, '', 0, []);\n        }\n    };\n    FileItem.prototype.cancel = function () {\n        this.uploader.cancelItem(this);\n    };\n    FileItem.prototype.remove = function () {\n        this.uploader.removeFromQueue(this);\n    };\n    FileItem.prototype.onBeforeUpload = function () {\n        return void 0;\n    };\n    FileItem.prototype.onBuildForm = function (form) {\n        return { form: form };\n    };\n    FileItem.prototype.onProgress = function (progress) {\n        return { progress: progress };\n    };\n    FileItem.prototype.onSuccess = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onError = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onCancel = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onComplete = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype._onBeforeUpload = function () {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    };\n    FileItem.prototype._onBuildForm = function (form) {\n        this.onBuildForm(form);\n    };\n    FileItem.prototype._onProgress = function (progress) {\n        var _this = this;\n        this._zone.run(function () {\n            _this.progress = progress;\n        });\n        this.onProgress(progress);\n    };\n    FileItem.prototype._onSuccess = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    };\n    FileItem.prototype._onError = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    };\n    FileItem.prototype._onCancel = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    };\n    FileItem.prototype._onComplete = function (response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    };\n    FileItem.prototype._prepareToUploading = function () {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    };\n    return FileItem;\n}());\nexports.FileItem = FileItem;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/components/file-upload/file-item.class.js\n ** module id = 8\n ** module chunks = 0\n **/","\"use strict\";\nvar FileType = (function () {\n    function FileType() {\n    }\n    FileType.getMimeClass = function (file) {\n        var mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    };\n    FileType.fileTypeDetection = function (inputFilename) {\n        var types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        var chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        var extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    };\n    /*  MS office  */\n    FileType.mime_doc = [\n        'application/msword',\n        'application/msword',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n        'application/vnd.ms-word.document.macroEnabled.12',\n        'application/vnd.ms-word.template.macroEnabled.12'\n    ];\n    FileType.mime_xsl = [\n        'application/vnd.ms-excel',\n        'application/vnd.ms-excel',\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n        'application/vnd.ms-excel.sheet.macroEnabled.12',\n        'application/vnd.ms-excel.template.macroEnabled.12',\n        'application/vnd.ms-excel.addin.macroEnabled.12',\n        'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n    ];\n    FileType.mime_ppt = [\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.ms-powerpoint',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n        'application/vnd.openxmlformats-officedocument.presentationml.template',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n        'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n        'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n        'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n    ];\n    /* PSD */\n    FileType.mime_psd = [\n        'image/photoshop',\n        'image/x-photoshop',\n        'image/psd',\n        'application/photoshop',\n        'application/psd',\n        'zz-application/zz-winassoc-psd'\n    ];\n    /* Compressed files */\n    FileType.mime_compress = [\n        'application/x-gtar',\n        'application/x-gcompress',\n        'application/compress',\n        'application/x-tar',\n        'application/x-rar-compressed',\n        'application/octet-stream'\n    ];\n    return FileType;\n}());\nexports.FileType = FileType;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/components/file-upload/file-type.class.js\n ** module id = 9\n ** module chunks = 0\n **/","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar file_uploader_class_1 = require('./file-uploader.class');\nvar FileDropDirective = (function () {\n    function FileDropDirective(element) {\n        this.fileOver = new core_1.EventEmitter();\n        this.onFileDrop = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileDropDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileDropDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileDropDirective.prototype.onDrop = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    };\n    FileDropDirective.prototype.onDragOver = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    };\n    FileDropDirective.prototype.onDragLeave = function (event) {\n        if (event.currentTarget === this.element[0]) {\n            return;\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    };\n    FileDropDirective.prototype._getTransfer = function (event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    };\n    FileDropDirective.prototype._preventAndStop = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    FileDropDirective.prototype._haveFiles = function (types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', file_uploader_class_1.FileUploader)\n    ], FileDropDirective.prototype, \"uploader\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], FileDropDirective.prototype, \"fileOver\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', core_1.EventEmitter)\n    ], FileDropDirective.prototype, \"onFileDrop\", void 0);\n    __decorate([\n        core_1.HostListener('drop', ['$event']), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', [Object]), \n        __metadata('design:returntype', void 0)\n    ], FileDropDirective.prototype, \"onDrop\", null);\n    __decorate([\n        core_1.HostListener('dragover', ['$event']), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', [Object]), \n        __metadata('design:returntype', void 0)\n    ], FileDropDirective.prototype, \"onDragOver\", null);\n    __decorate([\n        core_1.HostListener('dragleave', ['$event']), \n        __metadata('design:type', Function), \n        __metadata('design:paramtypes', [Object]), \n        __metadata('design:returntype', Object)\n    ], FileDropDirective.prototype, \"onDragLeave\", null);\n    FileDropDirective = __decorate([\n        core_1.Directive({ selector: '[ng2FileDrop]' }), \n        __metadata('design:paramtypes', [core_1.ElementRef])\n    ], FileDropDirective);\n    return FileDropDirective;\n}());\nexports.FileDropDirective = FileDropDirective;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-file-upload/components/file-upload/file-drop.directive.js\n ** module id = 10\n ** module chunks = 0\n **/","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { CloudinaryOptions } from './cloudinary-options.class';\nimport { CloudinaryTransforms } from './cloudinary-transforms.class';\nimport { CloudinaryImageService } from './cloudinary-image.service';\n\n@Component({\n  selector: 'cl-image',\n  template: `\n    <img [src]=\"imageUrl\" [title]=\"title || ''\" [alt]=\"alt || ''\">\n  `\n})\nexport class CloudinaryImageComponent implements OnInit, OnChanges {\n    imageUrl: string = '';\n    transforms: CloudinaryTransforms = new CloudinaryTransforms();\n\n    @Input('public-id') publicId: string;\n    @Input() options: CloudinaryOptions;\n    @Input() title: string;\n    @Input() alt: string;\n\n    constructor(private _imageService: CloudinaryImageService) { }\n\n    ngOnInit(): void {\n      if (!this.options) throw new Error('CloudinaryOptions are required for cl-image component');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.publicId && this.options) {\n            this.imageUrl = this._imageService.getImageUrl(this.publicId, this.options, this.transforms);\n        }else {\n            this.imageUrl = '';\n        }\n    }\n\n    @Input()\n    set format(value: string){\n        this.transforms.format = value;\n    }\n\n    @Input()\n    set height(value: string) {\n        this.transforms.height = value;\n    }\n\n    @Input()\n    set width(value: string) {\n        this.transforms.width = value;\n    }\n\n    @Input()\n    set crop(value: string) {\n        this.transforms.crop = value;\n    }\n\n    @Input()\n    set gravity(value: string) {\n        this.transforms.gravity = value;\n    }\n\n    @Input()\n    set x(value: string) {\n        this.transforms.x = value;\n    }\n\n    @Input()\n    set y(value: string) {\n        this.transforms.y = value;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/cloudinary-image.component.ts\n **/","export class CloudinaryOptions {\n    cloud_name: string;\n    upload_preset: string;\n    resource_type: string;\n    type: string;\n    autoUpload: boolean;\n\n    public constructor(opts: any) {\n        if (!opts.cloud_name) {\n            throw new Error('cloud_name is required for CloudinaryOptions');\n        }\n        this.cloud_name = opts.cloud_name;\n        this.upload_preset = opts.upload_preset;\n        this.resource_type = opts.resource_type || 'auto';\n        this.type = opts.type || 'upload';\n        this.autoUpload = !!opts.autoUpload || false;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/cloudinary-options.class.ts\n **/","export class CloudinaryTransforms {\n    format: string;\n    height: string;\n    width: string;\n    crop: string;\n    gravity: string;\n    x: string;\n    y: string;\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/cloudinary-transforms.class.ts\n **/","import { Injectable } from '@angular/core';\nimport { CloudinaryOptions } from './cloudinary-options.class.ts';\nimport { CloudinaryTransforms } from './cloudinary-transforms.class.ts';\n\nconst CLOUDINARY_URL: string = 'https://res.cloudinary.com/';\n\n@Injectable()\nexport class CloudinaryImageService {\n\n    getImageUrl(publicId: string, options: CloudinaryOptions, transforms: CloudinaryTransforms): string {\n        return  CLOUDINARY_URL +\n            options.cloud_name + '/' +\n            'image/upload/' +\n            getTransformationForUrlSegment(transforms) +\n            publicId + '.' + (transforms.format || 'jpg');\n\n    }\n\n}\n\nfunction getTransformationForUrlSegment(transforms: CloudinaryTransforms): string {\n    let transformSegment: string = '';\n\n    transformSegment += toPropertySegment(transformSegment, 'height', transforms.height);\n    transformSegment += toPropertySegment(transformSegment, 'width', transforms.width);\n    transformSegment += toPropertySegment(transformSegment, 'gravity', transforms.gravity);\n    transformSegment += toPropertySegment(transformSegment, 'crop', transforms.crop);\n    transformSegment += toPropertySegment(transformSegment, 'x', transforms.x);\n    transformSegment += toPropertySegment(transformSegment, 'y', transforms.y);\n\n    if (transformSegment.length > 0) {\n        transformSegment += '/';\n    }\n\n    return transformSegment;\n}\n\nfunction toPropertySegment(segment: string, name: string, value: any): string {\n    let newSegment: string = '';\n\n    if (name && value) {\n        if (segment.length > 0) {\n            newSegment += ',';\n        }\n\n        newSegment += name.substring(0, 1).toLowerCase() + '_' + value;\n    }\n    return newSegment;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/cloudinary-image.service.ts\n **/","export * from 'ng2-file-upload'\nimport { FileUploader } from 'ng2-file-upload';\nimport { CloudinaryOptions } from './cloudinary-options.class';\n\nconst UPLOAD_ENDPOINT: string = 'https://api.cloudinary.com/v1_1/';\n\nexport class CloudinaryUploader extends FileUploader {\n  opts: CloudinaryOptions;\n\n  public constructor(opts: CloudinaryOptions) {\n    super({});\n    this.opts = opts;\n    this.options.url = this.getUploadUrl(opts);\n    this.options.autoUpload = opts.autoUpload;\n  }\n\n  public onBuildItemForm(fileItem: any, form: any): any {\n    form.append('upload_preset', this.opts.upload_preset);\n    // Force the file uploader to never use app credentials\n    fileItem.withCredentials = false;\n    return {fileItem, form};\n  }\n\n  private getUploadUrl(opts: CloudinaryOptions): string {\n    let cloud_name: string = opts.cloud_name;\n    let resource_type: string = opts.resource_type;\n    let type: string = opts.type;\n    return UPLOAD_ENDPOINT + cloud_name + '/' + resource_type + '/' + type;\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader?emitErrors=true&failOnHint=true!./src/cloudinary-uploader.service.ts\n **/"],"sourceRoot":""}